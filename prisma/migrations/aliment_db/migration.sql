-- INSERT INTO "Chapter" ("id","title","numberOrder")
-- VALUES
-- ('28149748-05c7-4795-8383-4fceb68fcbc6','Conceitos Básicos',1),
-- ('42ef7763-5508-4bf7-8dd4-e5e6a4823528','Branchs',2),
-- ('30721299-cf8b-46f0-ba51-22ba8e55b7e6','Repositórios Remotos',3),
-- ('0c88d907-90fb-4c68-b1b3-27d8ee74c54b','Extras',4);

-- INSERT INTO "Level" ("id","id_chapter","title","numberOrder")
-- VALUES
-- ('5068028e-d499-4ca0-9f00-154ac301b1b9','28149748-05c7-4795-8383-4fceb68fcbc6','Entendo GIT',1),
-- ('879b23bb-2c5f-431d-92ac-ea9d37ca9fda','28149748-05c7-4795-8383-4fceb68fcbc6','Git Add',2),
-- ('42b3c273-8e61-4f7c-b35c-94a099631908','28149748-05c7-4795-8383-4fceb68fcbc6','Git Commit',3),
-- ('238181f2-c9e9-4294-ad51-c6d2bdbf3006','28149748-05c7-4795-8383-4fceb68fcbc6','Git Log',4),
-- ('58da88c5-5733-44f1-9464-57d60988e036','28149748-05c7-4795-8383-4fceb68fcbc6','Git Status',5),
-- ('0175f9e5-942c-4f77-b9c3-9440e338c82b','42ef7763-5508-4bf7-8dd4-e5e6a4823528','Git Merge',1),
-- ('8cdf5b98-3c86-4fc6-bc51-67dc3cce09a6','42ef7763-5508-4bf7-8dd4-e5e6a4823528','Git Rebase',2),
-- ('2faa30bb-5914-49e0-b152-9441f5469587','42ef7763-5508-4bf7-8dd4-e5e6a4823528','Git Cherry-Pick',3),
-- ('aed9a5f9-4e43-4482-8d82-888120cd3641','30721299-cf8b-46f0-ba51-22ba8e55b7e6','Repositórios Remotos e Locais',1),
-- ('2863896b-bbd0-4668-92b9-259d396cf333','30721299-cf8b-46f0-ba51-22ba8e55b7e6','Git Clone',2),
-- ('e771ae70-9d2b-4e83-a296-5bbed764f3b0','30721299-cf8b-46f0-ba51-22ba8e55b7e6','Git Pull e Git Push',3),
-- ('d6557bc4-fbe3-46dc-8ff9-81c2ecda203b','0c88d907-90fb-4c68-b1b3-27d8ee74c54b','Git Alias',2),
-- ('3496ec5a-691b-4dd5-98b6-7a5fa4fe7ab0','0c88d907-90fb-4c68-b1b3-27d8ee74c54b','Git Tag',1);

-- INSERT INTO "Activity" ("id_assessment","id_order_level")
-- VALUES
-- ('8f079028-e113-406d-9f4c-67be9dc5af2e','68643fa2-5811-4d33-93a2-9d9048bd0532'),
-- ('c2799dbf-6555-4154-8c52-c1dde3d948c9','828104fb-263e-4c73-8870-427c5aa40f27'),
-- ('f66e5bd8-3795-41ae-8193-ad101f11cb8b','fe90ec1c-4e42-471c-a0ec-d7aa3ae5b4d3'),
-- ('fab8b1c3-405a-4a41-97c4-baf5aed2f2ea','afa5c3ae-daff-44bf-9986-4c895dac0f3b'),
-- ('64bf10e1-198b-45e7-b53d-401e7b9d8257','4817bbad-3073-410f-ad24-94470893e451'),
-- ('cb3b9c7d-a3a3-4dad-a84a-3ceadfd34f94','47687f41-5136-4a1c-ba9d-a3a32992fbbd'),
-- ('48687680-17d4-40b6-8f5a-1c6479d3fb43','5555593c-3fbc-453b-8f34-0247610660c9'),
-- ('e074460c-4d50-474a-8a93-f514aa210dad','4691b672-2c8f-4a37-b3d4-92bd9d7cbf08'),
-- ('65e3717b-25e1-4ea7-b0f7-e2f25228294e','e0b06f48-4344-4a5e-96d8-2077bda7f485'),
-- ('65b6134a-ca6b-48ef-8b78-0dc8a3c914f2','bce2cfea-3967-4479-93ac-f14361d9df7e'),
-- ('ab4b5c78-36ef-4097-8a8e-50bb1ab27c9d','21d531a2-e1b4-4ffe-a4f3-c1a9035c7b35'),
-- ('e6b360a8-c960-4b8e-8885-4e2beae3a612','44455478-aa8d-4abe-b221-c560d97918c3'),
-- ('a018873f-f606-468d-aa01-6911b568869c','4c313020-0cff-4cb1-a94a-4a15a3bfef77');

-- INSERT INTO "Subject" ("id","id_order_level","title","text")
-- VALUES
-- ('8acab35c-f511-41c1-af61-c3e7b58d7b1f','c0b9571a-76a5-439a-802f-1ec105e6b7e5','O que é Git?','Git é um sistema de controle de versão de arquivos. Através dele podemos desenvolver projetos na qual diversas pessoas podem contribuir simultaneamente no mesmo, editando e criando novos arquivos e permitindo que os mesmos possam existir sem o risco de suas alterações serem sobrescritas.'),
-- ('59af16b6-ab33-472c-bf1e-9000be918950','e5354b79-c15e-4d7c-a5da-0fdd2b35f2bb','Sistema de controle de versão?','Sim, o sistema de controle de versão traz uma natureza bem utilitarista para um projeto, a ideia aqui é conter uma maquina do tempo, que permite visitar versões antigas de um arquivo, pode ser observada em diferentes locais, como atualmente até o google docs contem. Mas para o desenvolvimento de software é usada principalmente para salvar versões projeto, facilitando retornar facilmente a uma versão especifica se necessário ou até mesmo pegar um trecho de código ou arquivo anteriormente excluído ou modificado'),
-- ('99014f2a-cccb-42a9-b8eb-8219c143775e','5956ddf3-89a5-436b-a631-456805e166ce','O que tornar Git essencial de se aprender?','O git é o mais famoso e utilizado gerenciador de versões para projetos, existente desde 2005 e criado por Linux Torvalds, famoso criador do Linux, atualmente é amplamente usado para criar software, por causa dos seus conceitos e seu funcionamento que trouxe uma grande vantagem sobre outros concorrentes para o gerecimento de versões, conceitos esses que iremos aprender mais nos próximos capítulos e leveis.'),
-- ('fbb4cb52-d3a1-4aa9-ae5e-ef1ec143fe6d','8d64dc55-cf1f-4218-b619-b0bf35812086','O modelo descentralizado do Git','A descentralização do Git trouxe uma revolução no controle de versão, permitindo que cada desenvolvedor tenha uma cópia completa do repositório com todo o histórico de mudanças, o que facilita o trabalho offline, melhora a segurança e cria backups naturais.
-- O que é completamente diferente de antigamente em que continha uma natureza bem mais centralizada, algumas ferramentas dependiam de um servidor central, ao qual os desenvolvedores se conectavam a esse servidor para realizar mudanças no código das aplicações, isso acarretava diversos problemas, como a concorrência de uso, se ocorresse um erro no servidor era impossível ter contato com o código ou até mesmo se houvesse perda do projeto não era possível o recuperar facilmente.
-- As ferramentas mais utilizadas na época eram o CVS (Concurrent Versions System) e Subversion (SVN), ao qual não iremos falar por aqui, mas fica a título de curiosidade para caso queira pesquisar mais.'),
-- ('ecdb2221-76e6-4ff0-8ebd-5d19fcb3e5d3','5e4dd0c6-e512-49c3-8d6a-040f2c87b569','Ciclo de vida de um arquivo','Um dos conceitos mais importantes de se entender no Git é o ciclo de vida dos arquivos rastreados pelo git, consistindo em 3 status principais:
-- * untracked: Arquivos não monitorados pelo git, geralmente arquivos adicionados antes de grava uma versão. 
-- * unmodified: Arquivos monitoradas, mas sem haver alterações.
-- * modified: Arquivos modificados, mas sem estarem prontos para serem gravados.
-- * staged: Arquivos que estão marcados para serem salvos nas versões.
-- Para registrar e salvar esses arquivos é necessário utilizar dois comandos, ```git add``` e ```git commit```, ao qual iremos aprender mais na proxima fase'),
-- ('b75e4145-f8a0-4897-8916-e04ee80657a2','5030080d-ab00-41bc-89ad-7c09173e5242','Preparando arquivos','O ```git add``` é um dos comandos mais usados e básicos, pode ser usado para dizer ao git que a modificação que você preparou pode ser salva e guardada no histórico. existe diferentes formas de utilizar o ```git add```, tanto apontando algum arquivo especifico, caminho ou uma simbologia comum de terminal para se referir a um tipo de arquivo'),
-- ('2aeeed76-22bb-4fb5-ac21-1c5ee28a8ae7','b48ffd3b-a392-4a8e-9b4a-cb69f2713d03','Nome e caminhos de arquivos','Nesse formato é simples, é só passar o exato caminho da pasta e nome do arquivo, tendo como referencia a pasta base do projeto, onde o git foi inicializado, exemplo:
-- * git add index.js: Salvando pasta index na raiz do projeto
-- * git add services/date.js, preparando o arquivo date dentro da pasta services
-- * git add index.js service/date.js: adicionando os dois arquivos anteriores por apenas um comando'),
-- ('c9600168-402f-491c-8ac0-b5fe760b8414','30680a65-7340-42c4-a0a9-ad9f445eb890','Símbolos','Esse formato é o mesmo utilizado em terminais, se baseia em passar um simbolo como por exemplo o *, para tudo na pasta, e uni-lo com git add, exemplo:
-- * git add *: Adicionando todas os arquivos na pasta atual
-- * git add services/*.js: preparando todos arquivos .js dentro da pasta services
-- * git add file?.js: para arquivos que começão com file e terminam com .js, mas em seu meio contenham qualquer valor'),
-- ('0ac549d9-5cc1-40d0-9e82-13b7e7d652fb','fa19ef3c-92b5-4f29-9c41-13597a577817','Flags','Já nesse formato se usa flags dadas pelo próprio git para o comando add, como por exemplo:
-- * git add --all: Faz o mesmo trabalho que o git add *, adiciona todos os arquivos na pasta
-- * git add -u: prepara todos arquivos que foram modificados e excluídos (mas não os arquivos novos)
-- * git add -A: prepara todos arquivos novos ou modificados (mas não os arquivos excluídos)'),
-- ('3c82366b-28a4-47d7-b06d-eefc05fde47e','9c60a24d-49dd-424e-972c-76aa1525b3b2','Existe alguma diferença entre ?','Respondendo de forma curta, não existe nenhuma diferença no resultado final, nos 3 casos adicionam todos os arquivos da pasta atual, a única diferença que poderia ser citada é o fato de cada uma usar maneiras diferente para informar arquivos adicionados, uma usa caminhos de pasta, o `.` que informa a pasta atual, o simbolo pelo `*` e o uso de uma flag que contem suporte, sendo o `--all`'),
-- ('d6f53c7c-2338-44c6-817d-d527134d576a','945ed08d-199b-41c8-bee8-b1f0935a69a2','Salvando o progresso com git commit','Dolor natus eos quo voluptatem quaerat corporis voluptatum. Vel possimus quaerat quisquam et accusantium iste. Illo porro veniam unde totam quibusdam consequuntur enim.'),
-- ('f5bb2688-b8d9-470a-bc79-1a00172c8bfc','a4794ff7-4eb6-425d-9927-dc17c60bd1d2','Mensagem para o commit com ```git commit -m```','Officia aut cupiditate distinctio modi tempora. Voluptas aut totam voluptas laboriosam provident voluptas aut. Nobis voluptatem consequatur et dolorem placeat.'),
-- ('f364fae8-3cf0-4141-90b1-bef4cbde7b34','7061c6f9-ff9b-4f3d-9d15-d8bffce73230','Combinando ```git add``` e ```git commit```','Necessitatibus rerum aut aliquid quos. Autem est repudiandae tempora omnis omnis inventore cupiditate consequuntur. Quia aliquid eveniet id ipsa ratione temporibus ut dolorem explicabo.'),
-- ('e3f52bdf-d15b-4f9b-97e1-5a0a5ddef1ab','191b1d54-aba5-46c6-a2cb-d2a17bcfa99d','O conceito de branch no Git','Aperiam alias omnis sit nostrum ut dolorem libero veniam. Quia asperiores est aut repellendus delectus quod ex earum sit. Quod quidem occaecati doloremque veniam totam cumque repellat.'),
-- ('7c56c7c3-6578-4e7a-94bc-5d9e2b5fa503','c5d69c4b-2d8c-48f6-9bda-7bfa1a8826d4','Criando uma nova branch com ```git branch```','Ratione architecto quis quidem rerum quod consequuntur rerum. Ipsam voluptas voluptates veniam molestiae fugit. Id nisi aut est voluptatibus facilis. Mollitia velit qui animi repellendus.'),
-- ('5c31be3c-7c0a-4978-9243-cb742c9f4af8','fd4035a2-6e80-49d2-bf36-0df942d60c1f','Mudando de branch com ```git checkout```','Et nulla non dicta occaecati qui cupiditate laboriosam dicta. Optio laudantium et sapiente ut et id beatae. Quia exercitationem voluptas quod ullam nostrum quisquam repellat consequatur.'),
-- ('d687a75b-cd93-46c0-83bc-888bd5088230','d75b3a4b-17f5-47b1-8227-17f3e3a0a00b','Combinando branches com ```git merge```','Omnis et in voluptatum. Cum dolores voluptates nam repellendus. Sunt architecto nostrum rerum. Est quidem dolor ut et.'),
-- ('abdb3e9b-1b55-4f30-8177-fcedd1b38bc7','ac8dbb35-8cb5-4d62-ae2b-cce5ad5cb387','Resolvendo conflitos no Git','Omnis animi similique aut harum. Sequi dolores repudiandae corrupti voluptatem. Veritatis officiis tempore veniam nisi voluptate. Sed consequatur dolore quaerat perferendis.');

-- INSERT INTO "Exam" ("id_assessment","description","id_chapter")
-- VALUES
-- ('796fa1e9-b930-4da8-9edc-4e3d2e8dc204','Laboriosam delectus voluptas debitis et sit vel ex quo sequi. Alias repellendus ut iusto soluta sed a fugiat voluptatem. Molestias qui eaque ipsa eaque pariatur velit eveniet. Nam est fuga iusto dolor magni at beatae qui. Incidunt ratione ipsam inventore aut corporis molestias molestiae. Eius sed consequatur rerum laboriosam sint ut sit ipsam.','28149748-05c7-4795-8383-4fceb68fcbc6');
